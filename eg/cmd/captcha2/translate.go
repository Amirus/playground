package main

import "crypto/sha512"
import "fmt"
import "image"
import "image/png"

import "github.com/mewmew/playground/pic"

/// ### todo ###
///   - Only single characters are present in the map.
///   - The lookup will fail for character sequences such as "AW":
///     (1B217455B7B0E3D739D5DF8912351C2DF1254E6763B8A0C2AAB603BB181309995AA60668D524B7AD921AE34EB2DC8F0319609A9ED7F58D741B401CDF92F28B59)
/// ############
// charMap is a map from image content hash sum to a letter or number.
var charMap = map[string]string{
	"F74E8834F1E7B4C63C5519A904BF61403E1C90519E9B8772F0AB046F62A962E6524D535C415966B7F93E4685E44897B955BB3A2DE40BB53F175118646639A68D": "1",
	"B4139A08CEDA6576A4AD41FDFFB63667D2B1B9445AC9D7319CF4987389A946D3908793AC06CD16F04CF9B5884E55F99E03B56DF64E1F2BAD84848A9277F4737A": "2",
	"D362A1228FF0D903E9F463EE49CD29A314AFC4D82B128AFC2EC6F39CCDB0F4A1E2A615A9B8DE36E5B5C8B85F64A4AC1778E2244CB5EC6208910B5830B5D29994": "3",
	"C9BD12D2E975DF08F7DDB89B6DE2D394D4E4FF4C766936FAAC74EAC793913DD9F51F4DF5F9EF08C87FBE0FA8DA3D0B3794667824520487875D4233063AB44BC6": "4",
	"A464B9C4565DFB2311DF7C55BD75225A38D4FE9465CA69541E6E2570F5D2667285A99984962B4D7DBA115264D9A1C2C033B0A30954575427F1D80030CD719441": "5",
	"0AB90F4A069E4DDB3236EDD904B209B4F9A10520E391AC026DB3702E84CCC00F26DD5218B61FE89A0EF1E7DBED259051CDE65E74B1957842C3D9114D53C87BC8": "6",
	"15CE1A3C2419446D445E8B0A2F1EF80E89CC4C93AE276F32B23E2A6E2FC296D54A02361F50D82030E28688E690C5D658554C6D9CBE5BBD64644F8EE8C4D89D64": "7",
	"13C4B8E32E6FE8612496E99EA7D73348D985D15921D98E508A9756F6CBC13DE6673F24D159793D5C4D408E52BE89CD198B21741F13765F2AF8462A89DA8254C0": "8",
	"71ACB591CE6D3F1CA6CCBBDDD5FCF02DF39D416C95C6F00096EE13ED2D94C7AA963A2DF218943833D543E0EF6E499573683F430E2A8B55411F9C1760CE1AA775": "9",
	"F9F9AFCE6AC4785808EC94352F06C7D4EF8D98BA4839EAAAE8DA0E8F1C58D48E0B5B45F0AA0B30931F9790B5D88A474D9218D651AF551E6FED80373C2AD51F6B": "A",
	"2F192AC1871808BFE3572DFBE35B4EC35AF9FB95FE12C326F54AD4FAAD21E441C82C630DB313370AA827D9EE1B6DE9CCCAC685BC33D23E9ED648A295035BD05F": "B",
	"27B3FE8F48E58DB76BB8CF603B9AD4207B5053340029D2B929DF9EEB4C14F63D8DB52E6F7E80AF922FE835D022498BEF6BECFE0ABC61F58553D05DA85458BD95": "C",
	"82A5EF98E8DB1B2D456261FE6BD4F0952DD60E1A2253DD19708BA908EB0D84CB6976791B78A5E46600F07946F20D1DADCB010BAE4B9CA6BF4BDAC40E45165D76": "D",
	"446E3E91C0DA1CCDB4FA5DFC84FC91D0DBF8CE596812735BC6C7B5E8365EC93334FABD7FFA09AA324BFCBCE550141B8EE3D212F8279A6BC37590B0C7BFAD526B": "E",
	"CAB1D538267F7AE3FA4286D704C80C04BA52A1E7085D11387315C68DE7CA0CF25A2DCB8796669023DAAEE8F8BC411200259FA64195E4943148A98B6ECEBD8A14": "F",
	"C89A200BAEDBBD230EA549C41EFF9E60209D3E8AF94F313050F95C024ED32F27E9CE8199F247A48F15D06D4BFEA7F47A80BB1EAB2E47D4CBDEE0EE65C27F5914": "G",
	"9D69D800C876579469E285AF61E2431996233706153B3165C9292318774A21139246EB75425CBBF1BF6924864DF7684E51745F00136EFFF614AAAF3048EA5AE8": "H",
	"2F76A172984F5C853D56EC3380F3B15415653D3EE7A0D3A9D0EAFB4D199FC6EA0FFA41AC88A070C0465FAE850095F0FE16E0B857ECDE5AC31768440029A09A6A": "I",
	"8F8484F4BE0048132DF18B77AB0027D19B73CF44B1A78EF1393DB9DA110278893DE8D75D1A7EBF66DB2A7013F18A64FCDC8FCB2B867F6A30646748069378C27E": "J",
	"ED6DB073B3ACE4E848BA7744A2CCB899FA32083F3C4C8CD44CFC1958787D1C3FE37409B5AA939C0A9C44094C0282F3EFB208D8EB480DEAB62F226BC84BF470D8": "K",
	"3C8A838AEC65E5B2D76E658CFD497A95C5305A6978DDAA40B204B923630A90234A777078590CC01C8F6D78D6BF9ECDFBA4434AD8E6BD14897B3FF4FCB43BFB4B": "L",
	"85A42845A052E103A211FBCCD8C4C7BD8149CECB3F42EE4171844BDAA0A7E29781F34E1DB50979DFC317503451ADB8417224AE17E3DC589E6801A6AD13A6C775": "M",
	"E45BE0FCBC00DF1FC9242F47E071FA1B763186C3096302CEE5880DCE2E7CA6E2E141EF5C329F7D8E2834150209C61739AB3B7F972CC9575BAD4553C3A2F97A25": "N",
	"78A64165B5295917E8ADB8066851257E30CF9D9E67552EFBC00BF140756CF0BDC0D33BDD872526C8DB3A9593C92C56549F12EE0C290EB10D8BE3157EC7C2C480": "O",
	"316AA7B5CD5783EDE6D264FB3B629E1E83CEEFAFB8D50CB6FC46B546E7C9FAE215A6AACC49A3EE25A95246B28BAE3168D57372865A6F54B0BF4BA42AED6C7AB7": "P",
	"CE2FD54CE5787C7A59DC4FF76CEC21E43AAA63B7BA6525971B3C51461C86A428B4571CD69F16AB6438E93A8E35A362446908ECA886531E830C2E19937BB34F4B": "Q",
	"F8DCAEF84D49F86AAC1ACDE89C9C87E4D6FEEAEC25F844CEB3B974F78DFE3A9EE0961534B8BA71B6CAB7A2F5F5B1DE813C5A10CC12D0C92A78B3602DEF237EFB": "R",
	"B49A004156C41EDAB011FDABFF8824783AE5091A64A36A2AA45162E30CD65BCFA651AA303BC56FF62790DEB2F797A6552F0FBD7DCBEDFB555959875DB4B2BD0C": "S",
	"F23CE10D404C87F38FD60EB1E98C71ED6850606B8C9CE55A5E153BB077C0C7895D5692CF88B64EEA5C9771B4961F3E8BA2FF2A3FEF1B0FE0C6E27357F7EA996F": "T",
	"96EDC0424C6E90DB25EA595FD37A99A812C0A7C610D10ED9685278F14088B809713226E3154D613DFA260B26BE31DF6E8FAC76590A5B1F50888A33F1872F2B82": "U",
	"3F81C18F73F2E4C9183DCE1F2C8FE2B5297F4E007A4BDF56068A9744BCA0412B8E2E28F7F38AFDC02F3D5FA5A9E5C55D0BD051ABA4DDF62D24D330CB788DDF2B": "V",
	"C01B7278B9127BB24A0A5B94BC45C69BF6DB91C72A3FBD72DA0547F26333341610F95E838A93AFC799234D31CA3D7150E96F2E31CD4CF7507964D2410604F6CC": "W",
	"A08D3F9F3EDA9DC56CC1DF9C33C70BEBCF8743FEA5AA774D962FE000EA7AA2685D15C9EFABBD2D114E1F8E64AF5D69375215ADA765A0C88CC4FBB363F0BAA451": "X",
	"7F26B185B5647BF623F7F55153A2A1373AF379410CD7D0ED5CEFE0E2EA425A213B7943E93850AE434F25159EE399E75BC35DDFAF2647943506A7158884D3FEEC": "Y",
	"CE1E68A0CEE9E9BC0308CBBC5BD0B49F93DA8DE32636F5728B48E6E970D5CB81FC61263E9F1C8C92BCE195645DC70AA30845EE49E80385D2FD8359309BE0FF64": "Z",
}

// translate translates each sub image back into a character, by compare them
// against a stored version, and returns a string composed by these characters.
func translate(subs []pic.SubImager) (text string, err error) {
	for _, sub := range subs {
		hashSum, err := getHashSum(sub)
		if err != nil {
			return "", err
		}
		c, ok := charMap[hashSum]
		if !ok {
			return "", fmt.Errorf("charMap doesn't contain the content hash sum ('%s').", hashSum)
		}
		text += c
	}
	return text, nil
}

// getHashSum returns a hash sum based on the image's content.
func getHashSum(img image.Image) (hashSum string, err error) {
	hash := sha512.New()
	err = png.Encode(hash, img)
	if err != nil {
		return "", err
	}
	hashSum = fmt.Sprintf("%X", hash.Sum(nil))
	return hashSum, nil
}
