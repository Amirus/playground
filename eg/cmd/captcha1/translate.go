package main

import "crypto/sha512"
import "fmt"
import "image"
import "image/png"

import "github.com/mewmew/playground/pic"

/// ### todo ###
///   - Only single characters are present in the map.
///   - The lookup will fail for character sequences such as "AW":
///     (6E87E0DAE2C844B842E3B5B37F25B9154D6193A2E642545B0ED7A786ACF3FAFF831945A125FD5E9D34164E16742B830702E8343AD440C19672A377CB5FFD5BBC)
/// ############
// table is a map from image content hash sum to a letter or number.
var table = map[string]string{
   "67E921D1C20509AC60738AD772C00CDD1528135CF75981D08F2C235D0155C136B3890165675D9A1C1E8AA56B05D291CB3BFCF30230D394A4F9DD9FF3EE7E7A08": "1",
   "1A332665B21010F454C03A51D052C76E6440749E66586EC9B378C19981AA39E5238962E0ED741B71848B192C9B6AF499CD4C23E29F6C219694CA44D522748BC6": "2",
   "C1C645416C94C9337FBB0D3EC5124AD7E73AEFDA35B82487AE2FC45E947B3AA56396F2E7951B0E27E46B7895BA1FFB956E13946787BFB85A4D1AD9694A71894E": "3",
   "CC2B3CB28A8894E2F47194833764E64D9C7000C6E094866D33DCF3B79287077CE535E660B8E00F60CDF962C6174DCD1BD15F40093D893CEDEC985C16CE9F5D7E": "4",
   "D5110452BC1BAAB15E5AEAA0659830E830CC801639D1834CAA97D45DC6980663166AD5F7A471DCCDB410FD9A9C612AC4301C1ADE75C0B21CBD36B9469B7FE0A3": "5",
   "9DA64B7BBBE67ECC29D0B9D1CA5B5951601773BDCA36FAEBC0154C9940500CB45F139BC72F20C38E2FCFCCF9B6C5F7C0925E5B131ED9139F7697EC4F22C9B891": "6",
   "34E3A1F20281C6D65BB22B20BCA0B1E66C5129C74044BA984BF3806CE45F3E3E4CE029E9B18A7D1B63C77D4AB6BE5B1BA0355F55FF8AF70CD494E9E9DB7EE86E": "7",
   "AFD6650D972422A5BA5907AAFD45C8C61C0A8CD921C47E215F0A1FA15C0D2771211A25C12024B729601141EC309A00EB2C0B50BFB8C1E21B583AAA1374EC3F05": "8",
   "5F1D99EB364482841710C547C108B5EE389FB82A688860124C97352A991CBA240C7C0AF2382896B93D8F03B62BDB3F05568637BC13D8B7B2B003B39EBBE17520": "9",
   "FBDF124C61E6C4B9F526656B167323CC4DB8FCF49349139DD6A9513C3D7F347B2501CF4A763F2235023FC6214C55C3B683E1F2C7C03F35946CFA4FF76218F06F": "A",
   "5AB30E422B7033FC0FFABD3299C6ED6DFB107DBE737B78111BE223175195AD2404D173061EE0C2DD073CF0F1AD286014C164915B9EE8AB2CA6FDEEE38B5B08F9": "B",
   "1286AD0AA6AF4DBCACBF28EA0795FC2E8263FF68739201C125FC807AE381280FDA64032B0B58CFAF51FD75B3BFACAD89DA622F38E23B0897AF25A3EC68F7FCD8": "C",
   "15F6CB97BD05E829D20DC1C84233206BA1EDD5CC9A946439307F3011CC665966AD1A9DC6968CEF8683ED418D4C6D4506AF783E03FDF4798F274402BBF97F5A62": "D",
   "1819A59B5518840F7D3B5721B0E75179ABE5BC8148C2D2057B43615D99EEBAAB21477B62FE6294ACB63DC6BB2FD79CF98158551AFBB77E90CAA4FA5C395387AF": "E",
   "E3098B0E0DC35FF5E80AEA79F4F37CA66C10B8CE6F3AD937C5AC5DC2CF68A8EEFE30F6473452ABA8B54A70F7104100B28175AE2FC05EA8D1FA01508E0A818D5B": "F",
   "1E94C6DF2B0E1DA1E53496CBBE35C5D57CC05F46BF383F1D51CB507BD20F70C8F8F3CD5A7B50F9E19049D383F762F2599B32EFDFD8243DA784BB9DE2CA3A3A93": "G",
   "1844085DD34185A310D6376704D3ECCEF7197421E5D5AC5C5D00F92222446C6DA22A15F0D130043F7C195FB674F2D2BD63E0BD23E5BA7AACBDDB6EFC7C29DC93": "H",
   "9D295125E02C8BEF69B74E35EF995D3DDFC8D1F479620AB3C883EDB10280F527852AAF5DCC2F54ADC6DDF81FB8267F000E9371BFB8FE934189ECAF5DC063266D": "I",
   "FCC3ED67A8A2F477D4721F215EE4C947758CFE15FE4DEAF4E882DF1632C49C1E03D4B991A436F3B0B55AD528E1BA00D0C671EB8FFFB176639D90B04B109A09F2": "J",
   "73846C89A7A6DF065D324FA89303168E414D26479F51BFD38ABEDBD006BD05DB8F8801281F8D93C4F1AC8FFA0C46E936B6345A4D4ABD34347B05BCAE086EF2CA": "K",
   "9497248142857C0C6A6E250D0F3CE9EE41A24E44CEBE614FA34D9091A9A8D9B051890DA2668FCBF63AB9CA5CFF8470C6CE5DD968F0E82F71811E4EEF20F7A057": "L",
   "E3E2BD60508494BB88B3D7419E39C658D1DCC38040DD176FE74987BFDEB4679A9E74331BEB150B022BD04A841D074182C7866DCABB08ED663FAB6E013377D404": "M",
   "00078B43337E618F581E2C7EBBE7CC6F85E0BFDD37E88AAF0DD058BF8ACBA5D5027516A7F091BEAB8F2BE3498B6D72974394151B71E36BCE4E86DCFCB11EE45C": "N",
   "E909E72D4C76A5C5416911D657D5EDF4DDCE6561AD548896C2CAD309EE72399185B408834B9D983E1909D567357ABBB8E35E0AC2057735410B87C99C3C1A441C": "O",
   "E69ECD880556804DB62B43FA8C135514F2204B513176D5D99F6E5F81B4AA4C61060521F026442B39740EC9A7FC16824A330EF570229E14FD305F801AE04DFBDF": "P",
   "89662B0BD5801F447A5A928AA9E2BB0BD4306043D0F84A8AA1C1AD3C0684A60BC9D4F96EDA24AB496D8E7412AB70B5B7426568008C4D963AF291C904FC0F4B80": "Q",
   "B06B392CA05813AEDEC9A28F65BE7C4BE704C9C2FC623F8401DFB5921337FB35198DA00DAB4F87C04BE8D4546B8CFF205333B081BD7A9EA94CE6B8EC96CF9640": "R",
   "CF5A7DDF8887D142B2F7B5436561FCC20F7A0FAA6F890AF7550CF24D3F1BCB4F99E78AA7E37684A9AD7B35C5E4A379970BF5D08B8182CD14700E2720CCAA721E": "S",
   "0E32B4FBDEB710933680FB4005E809DEF7901785C3525E01CCA5AFA8638D4611B47FF18BD5BEA0F5F8A91992BA2A1B37FBBE21E12992FCF00F7E0F98CAD8FB48": "T",
   "B0285105C98D404D41645897C323F2C0F7F198440480594ACD2F24D2244BB79F1741AF8A29AD203AD222C75D972172C16A7D3EE8D96AB5C7CD8BFA5629A1F700": "U",
   "A88E9BA9AF223C636E43BA9B9D27E4C41220859F7AF74EC4D1C69F7641AD67D15700D409885163A615682A180A749059F6BD25988F8D1A2689F82990B17CC06D": "V",
   "1391AE22A9C048C86FD5AED22E5157D6AAA9333119D90AC509FD4E64ED47B13C493C1336325E97014B64D5C34743464F331A9682E30B08B21245185B7912701F": "W",
   "AA8B49665E4CB822911DD8D1F0A37FED71A521146C4A097E50257174AE1099435C9BFD97C9E1090995135B295924D45EC90BFEEDB7E56154DA042D1CC0950140": "X",
   "EE8520B732D190946AE8F9B290DCBD53B6E9978CF738A9F447B4BF910ED80715833EBA238D1640EBF0AD154E9A85AE2B07F8A22BFE04A14ADAF5D12B0750EF5B": "Y",
   "1D67A86BD82CEB40E91832337349BA3137DEBCFEEFEFDCCCFA12B3D850790628EBA9C81BAFFA1153ED29FB16806DDC432D79F89D84BD8ED610884994D88FB163": "Z",
}

// translate translates each sub image back into a character, by compare them
// against a stored version, and returns a string composed by these characters.
func translate(subs []pic.SubImager) (text string, err error) {
   for _, sub := range subs {
      hashSum, err := getHashSum(sub)
      if err != nil {
         return "", err
      }
      c, ok := table[hashSum]
      if !ok {
         return "", fmt.Errorf("table doesn't contain the content hash sum ('%s').", hashSum)
      }
      text += c
   }
   return text, nil
}

// getHashSum returns a hash sum based on the image's content.
func getHashSum(img image.Image) (hashSum string, err error) {
   hash := sha512.New()
   err = png.Encode(hash, img)
   if err != nil {
      return "", err
   }
   hashSum = fmt.Sprintf("%X", hash.Sum(nil))
   return hashSum, nil
}
